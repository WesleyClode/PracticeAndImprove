/*
    冒泡排序：两两比较，小的放前面
    具体思路：
      两层遍历
      第二层写逻辑（此处的遍历轮数：arr.length-1 每轮次数：arr.length-1 ）
      在每轮遍历中，两两比较，小的放前面，改变原数组内容
      直到比较完成
*/
const arr = [12, 8, 24, 16, 1]; // 1 8 12 16 24
for (let i = 0; i < arr.length-1; i++) {
    // console.log(arr[i],'外')
    for (let j = 0; j < arr.length-1; j++) {//此处for循环会执行arr.length-1次
        // console.log(arr[j],'内')
        if(arr[j] > arr[j+1]){
            [arr[j], arr[j+1]] = [arr[j+1], arr[j]]
        }
    }
}
console.log(arr)
/*
如下，所以每轮只需四次循环，四个小值放前面
  第一轮
    12 8   交换位置     [8, 12, 24, 16, 1]
    12 24  不交换位置   [8, 12, 24, 16, 1]
    24 16  交换位置     [8, 12, 16, 24, 1]
    24 1   交换位置     [8, 12, 16, 1, 24]
  
  第二轮（这时arr已变成[8, 12, 16, 1, 24]）
    8  12   不交换位置   [8, 12, 16, 1, 24]
    12 16   不交换位置   [8, 12, 16, 1, 24]
    16  1   交换位置     [8, 12, 1, 16, 24]
    16 24   不交换位置   [8, 12, 1, 16, 24]
*/



/*
    结构赋值后必须加;不然会报错
*/
// var e = [2,3,4,5];
// // [e[1],e[2]] = [e[2],e[1]];
// [e[1],e[2]] = [66,88];
// console.log(e)